# Number of processes that the server can handle.
# cmd: grep ^processor /proc/cpuinfo | wc -l
# let nginx handles itself
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    # The maximum number of connections that can be processed at one time
    # by each worker process.
    # cmd: ulimit -n
    worker_connections 8000;

    # Nginx use a non-blocking I/O with a single thread.
    # With epoll, its less cpu intensive than 'select' and 'poll'.
    # Its the method to identify witch connection is ready.
    use epoll;

    # Allows multiple connections at one time.
    multi_accept on;
}

http {
    # Timeout for which nginx is gonna close
    # the connection for a client.
    keepalive_timeout 75;
    keepalive_requests 100000;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay off;

    # Buffer size to read the client body.
    # If the request body is too large, the body is written
    # to a temporary file.
    client_body_buffer_size 3M;

    # Sets to 0 disables checking of client request body size.
    # I let other internal nginx router to handle it.
    client_max_body_size 3M;

    # Buffer size for reading client reauest header.
    # If header is too big (including cookies etc),
    # the default value of 'large_client_header_buffers' (8k) is used.
    client_header_buffer_size 1k;

    client_body_timeout 30;
    client_header_timeout 30;
    send_timeout 30;

    # Allows the server to close the connection if
    # a client stops responding.
    reset_timedout_connection on;

    # Hide nginx version
    server_tokens off;

    types_hash_max_size 2048;
    # server_names_hash_bucket_size 64;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log off;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_buffers 16 8k;
    gzip_http_version 1.0;

    include /etc/nginx/conf.d/*.conf;
}